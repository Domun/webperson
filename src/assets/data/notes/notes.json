{
    "ret": "success",
    "data": [
        {
            "caption": "http协议",
            "article": [
                {
                    "title": "Web及网络基础",
                    "content": [
                        {
                            "order": "http",
                            "txt": [
                                [
                                    "http:超文本传输协议/超文本转移协议"
                                ]
                            ]
                        },
                        {
                            "order": "计算机与网络设备间要通信",
                            "txt": [
                                [
                                    "不同硬件，不同操作系统间的一种通信方式，都需要一种规则。这种规则我们称之为：协议"
                                ]
                            ]
                        },
                        {
                            "order": "TCP/IP",
                            "txt": [
                                [
                                    "TCP/IP是互联网相关的各类协议的总称"
                                ]
                            ]
                        },
                        {
                            "order": "TCP/IP协议最重要的一点是分层；按层级分为4层",
                            "txt": [
                                [
                                    "1、应用层：应用层向用户提供了应用服务时通信的活动（FTP：用户传输协议；DNS域名系统；HTTP）；"
                                ],
                                [
                                    "2、传输层：传输层对上层应用层，提供处于网络连接的两台电脑之间的数据传输，在传输层上有两种性质不同的协议(TCP：传输控制协议)和（UDP：用户数据报协议）；"
                                ],
                                [
                                    "3、网络层（又称网络互联层）：网络层用来处理在网络上流动的数据包（数据包是网络传输的最小数据单位）该层规定了通过怎样的路径到达对方的计算机，并且将数据传送给对方。"
                                ],
                                [
                                    "4、链路层：用来处理连接网络的硬件部分，包括操作系统，硬件设备驱动、NIC(网络适配器即网卡)，硬件上的范畴均在链路层上"
                                ]
                            ]
                        },
                        {
                            "order": "http请求步骤简述",
                            "txt": [
                                [
                                    "1、作为发送端的客户端在应用层（HTTP协议）发送一个Web页面的HTTP请求"
                                ],
                                [
                                    "3、在网络层（IP协议），增加作为通信目的地的MAC地址转发给链路层，到此发送网络的通信请求就准备完全。"
                                ],
                                [
                                    "4、接受端的服务器在链路层收到数据，按序往上层发送一直到应用层，这样才算是完整的接受到了一个客户端的请求。"
                                ]
                            ]
                        },
                        {
                            "order": "IP（网际协议）",
                            "txt": [
                                [
                                    "IP（网际协议）位于网络层，作用是将数据包发送给对方，确保可以发送到，需要满足IP地址和MAC地址两个条件。"
                                ],
                                [
                                    "IP地址是节点分配的地址；MAC是网卡所属的固定的地址，二者搭配使用，IP地址会更改，但是MAC地址一般不会更改。"
                                ]
                            ]
                        }
                    ]
                },
                {
                    "title": "简单的HTTP协议",
                    "content": [
                        {
                            "order": "GET请求",
                            "txt": [
                                [
                                    "GET用来访问已被URI（请求访问的资源对象）访问的资源，指定的资源经服务器解析后返回相应的内容，文本即返回文本，如果是程序接口返回执行后的输出结果。"
                                ]
                            ]
                        },
                        {
                            "order": "POST请求",
                            "txt": [
                                [
                                    "POST用来传输实体主体。PUT用来传输文件到URI指定的位置，但自身不带验证机制，存在安全问题，一般web网站不使用该方法。"
                                ]
                            ]
                        },
                        {
                            "order": "HEAD：获得报文首部",
                            "txt": [
                                [
                                    "HEAD：获得报文首部。使用方式和GET一样，用于确认URI的有效性及资源更新的日期。"
                                ]
                            ]
                        },
                        {
                            "order": "DELETE：用来删除文件",
                            "txt": [
                                [
                                    "DELETE：用来删除文件，作用与PUT相反，使用方法与PUT相同，按请求URI删除指定的资源。"
                                ]
                            ]
                        },
                        {
                            "order": "OPTIONS：询问支持的方法",
                            "txt": [
                                [
                                    "OPTIONS：询问支持的方法。OPTIONS方法用来查询针对请求URI指定的资源支持的方式"
                                ]
                            ]
                        },
                        {
                            "order": "TRACE：追踪路径",
                            "txt": [
                                [
                                    "TRACE：追踪路径。会引发XST（跨站追踪）攻击。所以应用较少。"
                                ]
                            ]
                        },
                        {
                            "order": "CONNECT：要求用隧道协议链接代理",
                            "txt": [
                                [
                                    "CONNECT：要求用隧道协议链接代理。该方法要求在与代理服务器通信时建立隧道。"
                                ]
                            ]
                        },
                        {
                            "order": "http 特点",
                            "txt": [
                                [
                                    "HTTP1.1和部分HTTP1.0提出持续连接的方法，特点是：只要任意一端没有明确提出断开连接，则一直保持TCP链接状态。"
                                ]
                            ]
                        }
                    ]
                },
                {
                    "title": "HTTP报文内的HTTP信息",
                    "content": [
                        {
                            "order": "HTTP报文",
                            "txt": [
                                [
                                    "用于HTTP协议交互的信息被称为HTTP报文。"
                                ],
                                [
                                    "客户端（请求端）的HTTP报文被称为请求报文。"
                                ],
                                [
                                    "服务器端（响应端）的称为响应报文。"
                                ],
                                [
                                    "HTTP报文分为，报文首部和报文主体两块，通常并不一定有报文主体。"
                                ],
                                [
                                    "报文主体：是HTTP通信的基本单位，由8位组字节流组成，通过HTTP通信传输。"
                                ],
                                [
                                    "实体主体：作为请求或相应的有效载荷数据被传输，由实体首部和实体主体组成。"
                                ]
                            ]
                        },
                        {
                            "order": "分块传输编码",
                            "txt": [
                                [
                                    "分块传输编码：在HTTP通信中请求的编码实体资源尚未全部传输完成之前，浏览器无法显示页面，所以将数据分割成块，让浏览器能逐步显示页面。"
                                ]
                            ]
                        }
                    ]
                },
                {
                    "title": "返回结果的HTTP状态码",
                    "content": [
                        {
                            "order": "2XX",
                            "txt": [
                                [
                                    "2XX：请求成功，响应被正常处理"
                                ],
                                [
                                    "204：请求成功，但无资源返回，页面不会刷新。"
                                ],
                                [
                                    "206：部分资源请求成功。"
                                ]
                            ]
                        },
                        {
                            "order": "3XX",
                            "txt": [
                                [
                                    "3XX：重定向，浏览器需要执行某些处理才能正确处理请求。"
                                ],
                                [
                                    "301：永久重定向，表示请求的资源分配了新的URL（永久性）。"
                                ],
                                [
                                    "302：临时重定向，请求的资源分配到了其他的URL（临时性的）"
                                ]
                            ]
                        },
                        {
                            "order": "4xx",
                            "txt": [
                                [
                                    "4xx：客户端（请求端）发生错误；400：该状态码发生语法错误。"
                                ],
                                [
                                    "401：该状态码的请求需要通过HTTP的认证，第一次为需要认证提示，第二次为认证失败。"
                                ],
                                [
                                    "403：表示访问被服务器拒绝，服务器可以不给出拒绝的理由。404：服务器上没有请求的资源。"
                                ]
                            ]
                        },
                        {
                            "order": "5XX",
                            "txt": [
                                [
                                    "5XX：服务器发生错误；"
                                ],
                                [
                                    "500：服务器在执行请求时发生错误，与有可能是Web应用存在的BUG。"
                                ],
                                [
                                    "503：表示服务器正在停机超负荷运载或者正在停机维护。"
                                ]
                            ]
                        }
                    ]
                },
                {
                    "title": "与HTTP协作的Web服务器",
                    "content": [
                        {
                            "order": "通信数据转发程序",
                            "txt": [
                                [
                                    "通信数据转发程序：代理，网关，隧道。"
                                ]
                            ]
                        },
                        {
                            "order": "代理",
                            "txt": [
                                [
                                    "代理：是一种具有转发功能的程序，接受客户端的请求发给服务器，同时也接受服务器返回的相应发送给客户端。"
                                ]
                            ]
                        },
                        {
                            "order": "网关",
                            "txt": [
                                [
                                    "网关：作用和代理类似，但是网关能使通信线路上的服务器提供非HTTP服务。"
                                ],
                                [
                                    "利用网关可以提高通信的安全性，可在客户端和网关间通信线路上加密以确保连接的安全。"
                                ]
                            ]
                        },
                        {
                            "order": "隧道",
                            "txt": [
                                [
                                    "隧道：使用SSL加密通信的通信线路，隧道本身不会去解析请求，将请求和返回信息保持原样的互相传输。"
                                ]
                            ]
                        },
                        {
                            "order": "缓存服务器",
                            "txt": [
                                [
                                    "缓存服务器：缓存服务器是代理服务器的一种，当服务器返回相应时，缓存服务器会备份一份资源副本。"
                                ],
                                [
                                    "当客户端多次请求时，返回的请求会由缓存服务器返回给客户端，优势在于可避免客户端从源服务器多次请求资源。"
                                ]
                            ]
                        }
                    ]
                },
                {
                    "title": "HTTP首部",
                    "content": [
                        {
                            "order": "HTTP请求报文",
                            "txt": [
                                [
                                    "HTTP请求报文：由请求方法(GET/POST)，URL、HTTP版本、HTTP首部字段等构成。"
                                ]
                            ]
                        },
                        {
                            "order": "HTTP响应报文",
                            "txt": [
                                [
                                    "HTTP响应报文：有HTTP版本、状态码(数字和原因短语)、HTTP首部字段3部分。"
                                ]
                            ]
                        },
                        {
                            "order": "隧道",
                            "txt": [
                                [
                                    "隧道：使用SSL加密通信的通信线路，隧道本身不会去解析请求，将请求和返回信息保持原样的互相传输。"
                                ]
                            ]
                        },
                        {
                            "order": "缓存服务器",
                            "txt": [
                                [
                                    "缓存服务器：缓存服务器是代理服务器的一种，当服务器返回相应时，缓存服务器会备份一份资源副本。。"
                                ],
                                [
                                    "当客户端多次请求时，返回的请求会由缓存服务器返回给客户端，优势在于可避免客户端从源服务器多次请求资源。"
                                ]
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "caption": "代码编程规范",
            "article": [
                {
                    "title": "规范目的",
                    "content":[
                        {
                            "order":"代码规范目的",
                            "txt":[
                                ["以下文档为你提供一个合理的代码风格指导，我们不喜欢把自己的代码风格强加于你，此文档强烈鼓励你使用现有的、通用的、合理的模式。"],
                                ["项目的可维护性是第一，高效的团队协作效率一直是我们追求的目标。"],
                                ["基于规范开发符合Web标准的页面，减少冗余代码，降低开发、维护成本，提高代码可扩展性和可复用性。"],
                                ["同时，便于动态开发人员添加功能及前端后期优化维护和二次开发。"]
                            ]
                        }
                    ]
                },
                {
                    "title": "css代码规范",
                    "content": [
                        {
                            "order": "基本规范",
                            "txt": [
                                [
                                    "内联和外联的CSS都必须放在页面的head里。"
                                ],
                                [
                                    "编码统一为utf-8;。"
                                ],
                                [
                                    "建议编码之前引用 CSS Reset ,它会减少浏览器默认样式有可能带来的问题。"
                                ],
                                [
                                    "严格遵守id 和 class 命名约定。"
                                ],
                                [
                                    "必须为大区块样式添加注释, 小区块适量注释。"
                                ],
                                [
                                    "保持代码缩进格式。"
                                ],
                                [
                                    "书写代码前, 考虑并提高样式重复使用率。"
                                ],
                                [
                                    "尽可能的通过继承和层叠重用已有样式。"
                                ],
                                [
                                    "避免在标签上直接写样式(如：'<'div style=margin-bottom:10px;'>')，会增加维护成本；"
                                ]
                            ]
                        },
                        {
                            "order": "命名规范",
                            "txt":[
                                ["<h3>——页面结构——</h3>"],
                                ["容器: container/wrap"],
                                ["整体宽度：wrapper"],
                                ["页头：header"],
                                ["内容：content"],
                                ["页面主体：main"],
                                ["页尾：footer"],
                                ["导航：nav"],
                                ["侧栏：sidebar"],
                                ["栏目：column"],
                                ["中间内容：center"],
                                ["<h3>——导航——</h3>"],
                                ["导航：nav"],
                                ["导航：mainbav/globalnav"],
                                ["子导航：subnav"],
                                ["顶导航：topnav"],
                                ["边导航：sidebar"],
                                ["左导航：leftsidebar"],
                                ["右导航：rightsidebar"],
                                ["边导航图标：sidebarIcon"],
                                ["菜单：menu"],
                                ["子菜单：submenu"],
                                ["标题: title"]
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}